swagger: "2.0"
info:
  description: "API for creating and authenticating user identities."
  version: "1.0.0"
  title: "dp-identity-api"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
tags:
- name: "Identity API"
schemes:
- "https"
parameters:
  new_identity:
    name: identity
    description: "A new identity"
    in: body
    required: true
    schema:
      $ref: '#/definitions/Identity'
  new_token_request:
    name: newTokenRequest
    description: "The user's credentials"
    in: body
    required: true
    schema:
      $ref: '#/definitions/NewTokenRequest'
paths:
  /identity:
    post:
      tags:
      - "Identity"
      summary: "Create a new identity"
      description: "Create a new identity"
      parameters:
      - $ref: '#/parameters/new_identity'
      produces:
      - "application/json"
      responses:
        201:
          description: "identity created successfully"
          schema:
            $ref: '#/definitions/IdentityCreated'
        400:
          description: "invalid request body"
        409:
          description: "email address is already associated with an active identity"
        500:
          description: "internal server error"
  /token:
    post:
      tags:
      - "Token"
      summary: "Request a new auth token"
      description: "Verifies the user email and password and returns an auth token if successful, or appropriate error if unsuccessful"
      parameters:
      - $ref: '#/parameters/new_token_request'
      produces:
      - "application/json"
      responses:
        200:
          description: "The user's credentials were successfully verified"
          schema:
            $ref: '#/definitions/Token'
        400:
          description: "invalid request body"
        403:
          description: "credentials verification failed"
        404:
          description: "identity not found"
        500:
          description: "internal server error"
definitions:
  Identity:
    type: object
    properties:
      id:
        type: string
        description: "unique identifier for user"
        example: ""
      name:
        type: string
        description: "the name of the user"
        example: "Peter Venkman"
      email:
        type: string
        description: "the email of the user"
        example: "venkman@whoyougunnacall.com"
      password:
        type: string
        description: "the password of the user"
        example: "There is no Dana only zuul!"
      temporary_password:
        type: string
        description: "temporary password for user identity"
        example: ""
      migrated:
        type: boolean
        description: "true if the user has been migrated to identity API, false otherwise"
      deleted:
        type: boolean
        description: "flag to indicate if the user has been deleted"
      user_type:
        type: string
        description: "the user type - TODO: need to define what these are"
        example: "publisher"
  IdentityCreated:
    type: object
    properties:
      id:
        type: string
        description: "the id of the created identity"
        example: "9ba46688-03ed-4f62-b12a-a1744eb91f2c"
      uri:
        type: string
        description: "the uri of the created identity"
        example: "http://localhost:23800/identity/9ba46688-03ed-4f62-b12a-a1744eb91f2c"
  NewTokenRequest:
    type: object
    properties:
      email:
        type: string
        description: "the email of the user"
        example: "venkman@whoyougunnacall.com"
      password:
        type: string
        description: "the users password"
        example: "There is no Dana only zuul!"
  Token:
    type: object
    properties:
      token:
        type: string
        description: "a auth token"
        example: "9ba46688-03ed-4f62-b12a-a1744eb91f2c"