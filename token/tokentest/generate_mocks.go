// Code generated by moq; DO NOT EDIT
// github.com/matryer/moq

package tokentest

import (
	"sync"
	"time"
)

var (
	lockExpiryTimeHelperMockGetExpiry sync.RWMutex
	lockExpiryTimeHelperMockNow       sync.RWMutex
)

// ExpiryTimeHelperMock is a mock implementation of ExpiryTimeHelper.
//
//     func TestSomethingThatUsesExpiryTimeHelper(t *testing.T) {
//
//         // make and configure a mocked ExpiryTimeHelper
//         mockedExpiryTimeHelper := &ExpiryTimeHelperMock{
//             GetExpiryFunc: func() time.Time {
// 	               panic("TODO: mock out the GetExpiry method")
//             },
//             NowFunc: func() time.Time {
// 	               panic("TODO: mock out the Now method")
//             },
//         }
//
//         // TODO: use mockedExpiryTimeHelper in code that requires ExpiryTimeHelper
//         //       and then make assertions.
//
//     }
type ExpiryTimeHelperMock struct {
	// GetExpiryFunc mocks the GetExpiry method.
	GetExpiryFunc func() time.Time

	// NowFunc mocks the Now method.
	NowFunc func() time.Time

	// calls tracks calls to the methods.
	calls struct {
		// GetExpiry holds details about calls to the GetExpiry method.
		GetExpiry []struct {
		}
		// Now holds details about calls to the Now method.
		Now []struct {
		}
	}
}

// GetExpiry calls GetExpiryFunc.
func (mock *ExpiryTimeHelperMock) GetExpiry() time.Time {
	if mock.GetExpiryFunc == nil {
		panic("moq: ExpiryTimeHelperMock.GetExpiryFunc is nil but ExpiryTimeHelper.GetExpiry was just called")
	}
	callInfo := struct {
	}{}
	lockExpiryTimeHelperMockGetExpiry.Lock()
	mock.calls.GetExpiry = append(mock.calls.GetExpiry, callInfo)
	lockExpiryTimeHelperMockGetExpiry.Unlock()
	return mock.GetExpiryFunc()
}

// GetExpiryCalls gets all the calls that were made to GetExpiry.
// Check the length with:
//     len(mockedExpiryTimeHelper.GetExpiryCalls())
func (mock *ExpiryTimeHelperMock) GetExpiryCalls() []struct {
} {
	var calls []struct {
	}
	lockExpiryTimeHelperMockGetExpiry.RLock()
	calls = mock.calls.GetExpiry
	lockExpiryTimeHelperMockGetExpiry.RUnlock()
	return calls
}

// Now calls NowFunc.
func (mock *ExpiryTimeHelperMock) Now() time.Time {
	if mock.NowFunc == nil {
		panic("moq: ExpiryTimeHelperMock.NowFunc is nil but ExpiryTimeHelper.Now was just called")
	}
	callInfo := struct {
	}{}
	lockExpiryTimeHelperMockNow.Lock()
	mock.calls.Now = append(mock.calls.Now, callInfo)
	lockExpiryTimeHelperMockNow.Unlock()
	return mock.NowFunc()
}

// NowCalls gets all the calls that were made to Now.
// Check the length with:
//     len(mockedExpiryTimeHelper.NowCalls())
func (mock *ExpiryTimeHelperMock) NowCalls() []struct {
} {
	var calls []struct {
	}
	lockExpiryTimeHelperMockNow.RLock()
	calls = mock.calls.Now
	lockExpiryTimeHelperMockNow.RUnlock()
	return calls
}
